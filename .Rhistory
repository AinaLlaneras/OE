kable(data.frame(Planta1=names(which(tX[2,] == 1)), Planta6=c(names(which(tX[6,] == 1)), rep("",3)),Planta7=c(names(which(tX[7,] == 1)),rep("",3)),Planta8=c(names(which(tX[8,] == 1)),rep("",3))))
dtotal <- colSums(D*X)
dtotal[dtotal!=0]
ctotal <- P$CostObrir*Y
colnames(ctotal) <- c("Cost Obertura")
subset(ctotal, Y>0)
radi = 2000
a = matrix(0,nrow = nc, ncol = np)
delta <- c()
for(i in 1:np) {
for(j in 1:nc) {
if(D[j,i] < radi){
a[j,i] <- 1
}
}
}
rownames(a) <- rownames(D)
colnames(a) <- colnames(D)
kable(a)
num_clients_planta <- colSums(a)
names(num_clients_planta) <- colnames(D)
num_clients_planta <- as.data.frame(num_clients_planta)
colnames(num_clients_planta) <- "Clients"
kable(num_clients_planta)
on
ton <- t(on)
ton
ton*1:15
?matrix
ton%*%1:15
ton
ton <- t(on)
ton
on
dist <- D
rownames(dist) <- 1:15
Q = c()
M = 1:15
on = matrix(0, nrow=nc, ncol=np)
rownames(on) <- rownames(D)
colnames(on) <- colnames(D)
cl()
on2 <- on[,Q]
# Ara cada client el posem a la planta amb la que tingui la distancia minima
M1 = M
for(i in 1:12){
dist1 <- dist[M1,Q]
minim <- which(dist1 == min(dist1), arr.ind = T)
j <- minim[1]
i <- minim[2]
jsub <- as.numeric(rownames(dist1[j,]))
M1 <- M1[!M1 %in% jsub]
on2[jsub,i] <- 1
}
on2
dist <- D
rownames(dist) <- 1:15
Q = c()
M = 1:15
on = matrix(0, nrow=nc, ncol=np)
rownames(on) <- rownames(D)
colnames(on) <- colnames(D)
cl()
dist <- D
rownames(dist) <- 1:15
Q = c()
M = 1:15
on = matrix(0, nrow=nc, ncol=np)
rownames(on) <- rownames(D)
colnames(on) <- colnames(D)
cl<- c()
for(k in 1:3){
dist1 <- dist[M,]
minim <- which(dist1 == min(dist1), arr.ind = T)
j <- minim[1]
i <- minim[2]
jsub <- as.numeric(rownames(dist1[j,]))
M <- M[!M %in% jsub]
cl <- c(cl, jsub)
Q <- c(Q,i)
on[jsub,i] <- 1
}
on2 <- on[,Q]
# Ara cada client el posem a la planta amb la que tingui la distancia minima
M1 = M
for(i in 1:12){
dist1 <- dist[M1,Q]
minim <- which(dist1 == min(dist1), arr.ind = T)
j <- minim[1]
i <- minim[2]
jsub <- as.numeric(rownames(dist1[j,]))
M1 <- M1[!M1 %in% jsub]
on2[jsub,i] <- 1
}
on2
dist <- D
rownames(dist) <- 1:15
Q = c()
M = 1:15
on = matrix(0, nrow=nc, ncol=np)
rownames(on) <- rownames(D)
colnames(on) <- colnames(D)
cl<- c()
for(k in 1:3){
dist1 <- dist[M,]
minim <- which(dist1 == min(dist1), arr.ind = T)
j <- minim[1]
i <- minim[2]
jsub <- as.numeric(rownames(dist1[j,]))
M <- M[!M %in% jsub]
cl <- c(cl, jsub)
Q <- c(Q,i)
on[jsub,i] <- 1
}
kable(data.frame(Q,cl))
M1 = M
on2 <- on[,Q]
for(i in 1:12){
dist1 <- dist[M1,Q]
minim <- which(dist1 == min(dist1), arr.ind = T)
j <- minim[1]
i <- minim[2]
jsub <- as.numeric(rownames(dist1[j,]))
M1 <- M1[!M1 %in% jsub]
on[jsub,i] <- 1
}
dist <- D
rownames(dist) <- 1:15
Q = c()
M = 1:15
on = matrix(0, nrow=nc, ncol=np)
rownames(on) <- rownames(D)
colnames(on) <- colnames(D)
cl<- c()
for(k in 1:3){
dist1 <- dist[M,]
minim <- which(dist1 == min(dist1), arr.ind = T)
j <- minim[1]
i <- minim[2]
jsub <- as.numeric(rownames(dist1[j,]))
M <- M[!M %in% jsub]
cl <- c(cl, jsub)
Q <- c(Q,i)
on[jsub,i] <- 1
}
kable(data.frame(Q,cl))
M1 = M
on2 <- on[,Q]
for(i in 1:12){
dist1 <- dist[M1,Q]
minim <- which(dist1 == min(dist1), arr.ind = T)
j <- minim[1]
i <- minim[2]
jsub <- as.numeric(rownames(dist1[j,]))
M1 <- M1[!M1 %in% jsub]
on2[jsub,i] <- 1
}
on2
ton <- t(on2)
ton
ton*c(1:15)
ton[1,]*c(1:15)
names(which(ton[1,] == 1))
ton <- t(on2)
names(which(ton[1,] == 1))
names(which(ton[2,] == 1))
names(which(ton[3,] == 1))
ton <- t(on2)
kable(data.frame(Planta1 = names(which(ton[1,] == 1)),
Planta2=c(names(which(ton[2,] == 1)),rep("0",3)),
Planta3=names(which(ton[3,] == 1))))
on2
on2*D[,Q]
D[,Q]
sum(on2*D[,Q])
X3 <- read.table("X3.txt", header = TRUE)
Y3 <- read.table("Y3.txt", header = TRUE)
rownames(X3) <- paste(rep("C", nc), 1:nc, sep = "")
rownames(Y3) <- paste(rep("P", np), 1:np, sep = "")
kable(Y3)
Y3
kable(X3)
X3
which(X3[,3] == 1)
tX3 <- t(X3)
which(tX3[,3] == 1)
names(which(tX3[2,] == 1)
)
names(which(tX3[4,] == 1))
names(which(tX3[3,] == 1))
names(which(tX3[6,] == 1))
tX3 <- t(X3)
kable(data.frame(Planta1 = names(which(tX3[2,] == 1)),
Planta2=c(names(which(tX3[4,] == 1)),rep("",4)),
Planta3=c(names(which(tX3[6,] == 1)),rep("",5))))
taula33<-kable(data.frame(Planta1 = names(which(tX3[2,] == 1)),
Planta2=c(names(which(tX3[4,] == 1)),rep("",4)),
Planta3=c(names(which(tX3[6,] == 1)),rep("",5))))
taula33
solopt32 <- sum(on2*D[,Q])
solpot33 <- 20343.6
solopt32
solpot33 <- 20343.6
ton <- t(on2)
taula32 <- kable(data.frame(Planta1 = names(which(ton[1,] == 1)),
Planta2=c(names(which(ton[2,] == 1)),rep("",3)),
Planta3=names(which(ton[3,] == 1))))
taula32
solopt32 <- sum(on2*D[,Q])
Q
ton <- t(on2)
taula32 <- kable(data.frame(Planta2 = names(which(ton[1,] == 1)),
Planta1=c(names(which(ton[2,] == 1)),rep("",3)),
Planta6=names(which(ton[3,] == 1))))
taula32
solopt32 <- sum(on2*D[,Q])
tX3 <- t(X3)
taula33<-kable(data.frame(Planta2 = names(which(tX3[2,] == 1)),
Planta4=c(names(which(tX3[4,] == 1)),rep("",4)),
Planta6=c(names(which(tX3[6,] == 1)),rep("",5))))
taula33
taula32
taula33
kable(data.frame(Q,cl))
pl33 <- data.frame(Planta2 = names(which(tX3[2,] == 1)),
Planta4=c(names(which(tX3[4,] == 1)),rep("",4)),
Planta6=c(names(which(tX3[6,] == 1)),rep("",5)))
pl33
pl32 <- data.frame(Planta2 = names(which(ton[1,] == 1)),
Planta1=c(names(which(ton[2,] == 1)),rep("",3)),
Planta6=names(which(ton[3,] == 1)))
pl33
?pivot_wider
fish_encounters
fish_encounters %>%
pivot_wider(names_from = station, values_from = seen)
pl32
pivot_longer(pl32, cols = 1:3, names_to = Planta, values_to = client)
?pivot_longer
pivot_longer(pl32, cols = 1:3)
pivot_longer(pl32, cols = 1:3, names_to = "Planta", values_to = "Client")
pivot_longer(pl32, cols = 1:3, names_to = "Planta", values_to = "Client")
pivot_longer(pl33cols = 1:3, names_to = "Planta", values_to = "Client"))
pivot_longer(pl32, cols = 1:3, names_to = "Planta", values_to = "Client")
pivot_longer(pl33, cols = 1:3, names_to = "Planta", values_to = "Client")
cbind(pivot_longer(pl32, cols = 1:3, names_to = "Planta", values_to = "Client"),
pivot_longer(pl33, cols = 1:3, names_to = "Planta", values_to = "Client")[,1])
pl33
pivot_longer(pl33, cols = 1:3, names_to = "Planta", values_to = "Client")[,1]
pivot_longer(pl33, cols = 1:3, names_to = "Planta", values_to = "Client")
pivot_longer(pl32, cols = 1:3, names_to = "Planta", values_to = "Client")
ton
tX3
tX3[c(2,4,6),]
X3
X3*rep(1:10,15)
X3*matrix(rep(1:10,15), nrow = 15)
X3*matrix(rep(1:10,15), nrow = 15, byrow = TRUE)
rowSums(X3*matrix(rep(1:10,15), nrow = 15, byrow = TRUE))
rowSums(on2*matrix(rep(1:10,15), nrow = 15, byrow = TRUE))
on2
rowSums(on2*matrix(rep(c(2,1,4),15), nrow = 15, byrow = TRUE))
rowSums(on2*matrix(rep(c(2,1,6),15), nrow = 15, byrow = TRUE))
rowSums(X3*matrix(rep(1:10,15), nrow = 15, byrow = TRUE))
aux1<- rowSums(on2*matrix(rep(c(2,1,6),15), nrow = 15, byrow = TRUE))
aux2<- rowSums(X3*matrix(rep(1:10,15), nrow = 15, byrow = TRUE))
merge(aux1,aux2)
kable(data.frame(Heuristica=aux1, ModelMat = aux2))
1.135^2
1.15/(1.288)
0.893*1.75
1.8-1.563
0.893*2+0.237
1+2+3+4+5+6
x <- c(1,2,3,4,5,6)
y <- c(10,17,30,28,19,47)
mean(x)
sum(x)/6
sum(y)
sum(y)/6
mean(y)
3.5^2
1+4+9+16+25
55/6
var(x)
sum(x^2)
x^2
91/6
91/6-12.25
91/5-12.25
?var
var()
(1+4+9+16+25+36)
(1+4+9+16+25+36)/6
(1+4+9+16+25+36)/6-3.5^2
var(x)
var
x-3.5
(x-3.5)
(x-3.5)^2
sum((x-3.5)^2)
sum((x-3.5)^2)/6
17.5/5
x*y
3.5*12.167
sum(x*y)
sum(x*y)/6
sum(x*y)/6-42.584
cov(x,y)
y
y[5] <- 39
y*x
sum(y*x)
sum(y*x)/6
x*y
mean(y)
mean(y)*mean(x)
3.5*28*5
3.5*28.5
723/6
723/6-99.75
20.75/2.91
20.75/2.91*3.5
7.13*24.957
7.13*3.5
28.5-7.13*3.5
7.13*5+3.545
sqrt(2.91)
y^2
mean(y)
mean(y)^2
sum(y^2)
sqrt(5803/6-812.25)
sqrt(var(y))
20.75/(1,7*12.45)
20.75/(1.7*12.45)
pg <- read.table("Apartat1_5_PG.txt", header = TRUE)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(ggplot2)
library(tidyr)
pg <- read.table("Apartat1_5_PG.txt", header = TRUE)
th <- read.table("Apartat1_5_TH.txt", header = TRUE)
u <- read.table("Apartat1_5_u.txt", header = TRUE)
vud <- read.table("Apartat1_5_vud.txt", header = TRUE)
df2 <- read.table("Apartat1_2.txt", header=T)
## c) gràfic del perfil de potència i energia de dues unitats generadores al llarg del temps
T <- 1:24
df3 <- read.table("Apartat1_3.txt", header = TRUE)
df3$T <- T
df32 <- pivot_longer(df3, cols = c(PG_NRC3, PG_NRC1), names_to = "Generadors", values_to = "Potencia")
graf1 <- ggplot(data = df32, aes(x = T, y = Potencia, group = Generadors))
graf1 +
geom_line(aes(color=factor(Generadors)),linewidth=1.1) +
labs(title = "Perfil de potència",
x = "T",
y = "MGW",
color = "Generador")
pot <- matrix(c(1,2,289.897,
1,5,839.888,
2,3,389.582,
2,4,1133.52,
2,5,1035.12,
3,4,733.77,
4,5,472.025,
4,7,1363.83,
4,9,758.595,
5,6,1312.88,
6,11, 1086.39,
6,12,58.8122,
6,13,167.676,
7,8,121.1,
7,9,1242.73,
9,10, 1160.41,
9,14,130.088,
10,11,37.0086,
12,13,34.0122,
13,14,154.888), ncol = 3, byrow = T)
pot[which.max(pot[,3]),]
arc <- read.table("Apartat1_41.txt", header = TRUE)
arc$T <- T
ggplot(data = arc, aes(x = T, y = potencia))+
geom_line(size=1.1) +
labs(title = "Perfil de potència arc (4,7)",
x = "T",
y = "MGW")
## e) marge de potència disponible té el sistema a cada període per absorbir eventuals desajustos d oferta i o demanda
marges <- read.table("Apartat_42.txt", header = TRUE)
pg2 <- pg[,-which(sapply(pg, sum)==0)]
pg2 <- pg[,-which(sapply(pg, sum)==0)]
pg2$T <- T
potencia_hores <- pivot_longer(data = pg2, cols = 1:4, names_to = "generador", values_to = "mgw")
potencia_hores
marges
colnames(pg)
rownames(marges) <- colnames(pg)
?march
?match
match(marges, pg)
intersect
intersect(1:10, 7:20)
r <- c(1, NA, NaN)
zN <- c(complex(real = NA , imaginary =  r ), complex(real =  r , imaginary = NA ),
complex(real =  r , imaginary = NaN), complex(real = NaN, imaginary =  r ))
r
zN
zM <- cbind(Re=Re(zN), Im=Im(zN), match = match(zN, zN))
zM
marges$generador <- rownames(marges)
marges
match(marges[,c(1,5)], potencia_hores)
library(dplyr)
?left_join
prova <- left_join(marges, potencia_hores, by="generador")
prova
prova <- left_join(marges, potencia_hores, by="generador", keep = F)
prova
marges <- marges[,-which(sapply(pg, sum)==0)]
marges
## e) marge de potència disponible té el sistema a cada període per absorbir eventuals desajustos d oferta i o demanda
marges <- read.table("Apartat_42.txt", header = TRUE)
marges <- marges[-which(sapply(pg, sum)==0),]
marges
## e) marge de potència disponible té el sistema a cada període per absorbir eventuals desajustos d oferta i o demanda
marges <- read.table("Apartat_42.txt", header = TRUE)
pg2 <- pg[,-which(sapply(pg, sum)==0)]
pg2$T <- T
marges <- marges[-which(sapply(pg, sum)==0),]
marges$generador <- colnames(pg)
marge
marges
## e) marge de potència disponible té el sistema a cada període per absorbir eventuals desajustos d oferta i o demanda
marges <- read.table("Apartat_42.txt", header = TRUE)
pg2 <- pg[,-which(sapply(pg, sum)==0)]
pg2$T <- T
marges$generador <- colnames(pg)
marges <- marges[-which(sapply(pg, sum)==0),]
marges
potencia_hores <- pivot_longer(data = pg2, cols = 1:4, names_to = "generador", values_to = "mgw")
prova <- left_join(marges, potencia_hores, by="generador")
prova
ggplot(data = potencia_hores, aes(x = T, y = mgw)) +
geom_line() +
geom_hline(yintercept = pgmax) +
facet_wrap(~generador, ncol = 2) +
labs(x="T",
y="MGW")
ggplot(data = potencia_hores, aes(x = T, y = mgw)) +
geom_line() +
facet_wrap(~generador, ncol = 2) +
labs(x="T",
y="MGW")+
geom_hline(aes(yintercept = pmax), color = "red", linetype = "dashed") +
geom_hline(aes(yintercept = pmin), color = "blue", linetype = "dashed")
?after_stat
marges
ggplot(data = potencia_hores, aes(x = T, y = mgw)) +
geom_line() +
facet_wrap(~generador, ncol = 2) +
labs(x="T",
y="MGW")+
geom_hline(aes(yintercept = marges[,c(1,5)]), color = "red", linetype = "dashed") +
geom_hline(aes(yintercept = marges[,c(2,5)]), color = "blue", linetype = "dashed")
rlang::last_trace()
max_min_data <- potencia_hores %>%
group_by(generador) %>%
summarize(mgw_max = max(mgw), mgw_min = min(mgw))
View(max_min_data)
marges
ggplot(data = potencia_hores, aes(x = T, y = mgw)) +
geom_line() +
facet_wrap(~generador, ncol = 2) +
labs(x="T",
y="MGW")+
geom_hline(data = marges, aes(yintercept = pmax), color = "red", linetype = "dashed") +
geom_hline(data = marges, aes(yintercept = pmin), color = "blue", linetype = "dashed")
prova
marges
prova <- left_join(marges[,2:5], potencia_hores, by="generador")
prova
prova <- left_join(marges[,3:5], potencia_hores, by="generador")
marges
prova
prova$rup <- prova$rup + prova$mgw
prova$rdown <- prova$rdown + prova$mgw
prova
prova <- left_join(marges[,3:5], potencia_hores, by="generador")
prova$rup <- prova$rup + prova$mgw
prova$rdown <- - prova$rdown + prova$mgw
prova
prova$rdown[<0]
prova$rdown < 0
prova$rdow[prova$rdown < 0]
prova$rdow[prova$rdown < 0] <- 0
prova
prova[prova$rdown < 0, 2] <- 0
prova
ggplot(data = potencia_hores, aes(x = T, y = mgw)) +
geom_ribbon(aes(ymin = rdown, ymax = rup), fill = "grey80", alpha = 0.5) +
geom_line() +
facet_wrap(~generador, ncol = 2) +
labs(x="T",
y="MGW")+
geom_hline(data = marges, aes(yintercept = pmax), color = "red", linetype = "dashed") +
geom_hline(data = marges, aes(yintercept = pmin), color = "blue", linetype = "dashed")
ggplot(data = prova, aes(x = T, y = mgw)) +
geom_ribbon(aes(ymin = rdown, ymax = rup), fill = "grey80", alpha = 0.5) +
geom_line() +
facet_wrap(~generador, ncol = 2) +
labs(x="T",
y="MGW")+
geom_hline(data = marges, aes(yintercept = pmax), color = "red", linetype = "dashed") +
geom_hline(data = marges, aes(yintercept = pmin), color = "blue", linetype = "dashed")
