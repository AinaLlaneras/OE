n.var <- c("Survt","Status","x1","x2","x3","x4","x5")
kable(data.frame(Variables=n.var, Descripció= c("Temps en dies fins que torni a patir un atac al cor (Com a màxim, el temps serà de dos anys)","Indicador de censura per la dreta (0=censurat; 1=observat)","Tractament que rep el pacient (1= Placebo, 0= Tractament)","Nivell de glucosa en sang (En mmol/l)","Variació del pes del pacient des de l'inici de l'estudi fins la recaiguda","Gènere del pacient (0= Dona, 1= Home)"," Dosi de tractament administrada")))
datos <- read.table("datos.txt",head=T)
datos[,"Status"]<-as.factor(datos[,"Status"])
datos[,"x1"]<-as.factor(datos[,"x1"])
datos[,"x4"]<-as.factor(datos[,"x4"])
colnames(datos)<-c("temps","status","tract","glc","pes","genere","dosis")
glcf<-c()
glcf[datos$glc<5.6]<-0 #Normal
glcf[datos$glc>=5.6&datos$glc<7]<-1 #Prediabetis
glcf[datos$glc>=7]<-2 #Diabetis
glcf<-as.factor(glcf)
datos$glc<-glcf
pesf<-c()
pesf[datos$pes< -2]<-0 #Menys pes
pesf[datos$pes>=-2&datos$pes<2]<-1 #Mateix pes
pesf[datos$pes>=2]<-2 #Més pes
pesf<-as.factor(pesf)
datos$pes<-pesf
dosisf<-c()
dosisf[datos$dosis<5]<-0 #Dosi baixa
dosisf[datos$dosis>=5]<-1 #Dosi alta
dosisf<-as.factor(dosisf)
datos$dosis<-dosisf
y <- Surv(datos$temps,datos$status==1)
anyDuplicated(y)
model1<-coxph(y~tract+glc+pes+genere+dosis,data=datos)
summary(model1)
m1 <- coxph(y~tract+glc+pes+genere+dosis, data=datos)
step(m1)
m2 <- coxph(y~tract+pes+genere+tract:pes+tract:genere+pes:genere,data=datos)
step(m2)
model2<-coxph(y ~ tract  + pes + genere + pes:genere,data=datos)
summary(model2)
KMRx=survfit(y~tract,data = datos)
plot(KMRx,lty=c(1,2),col=c("coral","blue"),
xlab="Tiempo de supervivencia en semanas",ylab="Probabilidades de supervivencia",
main="KMRx")
legend("topright", c("Placebo, tract=0","Tratamiento, tract=1"), lty=c(1,2), col=c("coral","blue"))
# Curva -log y log-log KM para Rx
plot(KMRx,fun="cumhaz", lty=c(1,2), col=c("coral","blue"),
xlab="Tiempo de supervivencia en semanas",ylab="-log supervivencia", main="-log KMRx")
legend("topleft", c("Tratamiento, Rx=0","Placebo, Rx=1"),lty=c(1,2), col=c("coral","blue"))
KMRx=survfit(y~glc,data = datos)
plot(KMRx,lty=c(1,2),col=c("coral","darkgoldenrod","blue"),
xlab="Tiempo de supervivencia en semanas",ylab="Probabilidades de supervivencia",
main="KMRx")
legend("topright", c("glc, glc=0","glc, glc=1","glc, glc=2"),
lty=c(1,2,2), col=c("coral","darkgoldenrod","blue"))
# Curva -log y log-log KM para Rx
plot(KMRx,fun="cumhaz", lty=c(1,2), col=c("coral","darkgoldenrod","blue"),
xlab="Tiempo de supervivencia en semanas",ylab="-log supervivencia", main="-log KMRx")
legend("topleft", c("glc, glc=0","glc, glc=1","glc, glc=2"),
lty=c(1,2,2), col=c("coral","darkgoldenrod","blue"))
KMRx=survfit(y~pes,data = datos)
plot(KMRx,lty=c(1,2,2),col=c("coral","darkgoldenrod","blue"),
xlab="Tiempo de supervivencia en semanas",ylab="Probabilidades de supervivencia",
main="KMRx")
legend("topright", c("Menys pes, pes=0","Mateix pes, pes=1","Més pes, pes=2"),
lty=c(1,2,2), col=c("coral","darkgoldenrod","blue"))
# Curva -log y log-log KM para Rx
plot(KMRx,fun="cumhaz", lty=c(1,2,2), col=c("coral","darkgoldenrod","blue"),
xlab="Tiempo de supervivencia en semanas",ylab="-log supervivencia", main="-log KMRx")
legend("topleft", c("pes, pes=0","pes, pes=1","pes, pes=2"),
lty=c(1,2,2), col=c("coral","darkgoldenrod","blue"))
KMRx=survfit(y~genere,data = datos)
plot(KMRx,lty=c(1,2),col=c("coral","blue"),
xlab="Tiempo de supervivencia en semanas",ylab="Probabilidades de supervivencia",
main="KMRx")
legend("topright", c("Dona, genere=0","Home, genere=1"),
lty=c(1,2), col=c("coral","blue"))
# Curva -log y log-log KM para Rx
plot(KMRx,fun="cumhaz", lty=c(1,2), col=c("coral","blue"),
xlab="Tiempo de supervivencia en semanas",ylab="-log supervivencia", main="-log KMRx")
legend("topleft", c("Dona, genere=0","Home, genere=1"),
lty=c(1,2), col=c("coral","blue"))
KMRx=survfit(y~dosis,data = datos)
plot(KMRx,lty=c(1,2),col=c("coral","blue"),
xlab="Tiempo de supervivencia en semanas",ylab="Probabilidades de supervivencia",
main="KMRx")
legend("topright", c("Baixa, dosis=0","Alta, dosis=1"),
lty=c(1,2), col=c("coral","blue"))
# Curva -log y log-log KM para Rx
plot(KMRx,fun="cumhaz", lty=c(1,2), col=c("coral","blue"),
xlab="Tiempo de supervivencia en semanas",ylab="-log supervivencia", main="-log KMRx")
legend("topleft", c("Baixa, dosis=0","Alta, dosis=1"),
lty=c(1,2), col=c("coral","blue"))
(testmodel1<- cox.zph(model1))
plot(testmodel1,var=1)
plot(testmodel1,var=2)
plot(testmodel1,var=3)
plot(testmodel1,var=4)
plot(testmodel1,var=5)
mod_est<-coxph(y~tract+pes+strata(genere),data=datos)
summary(mod_est)
mod_est_int <- coxph(y ~ tract + pes + strata(genere) + tract*(genere) + (genere)*pes, data = datos)
mod_est_int
AIC(mod_est)
AIC(mod_est_int)
mod_est_int2 <- coxph(y ~ tract + pes + strata(genere) + (genere)*pes, data = datos)
mod_est_int2
AIC(mod_est)
AIC(mod_est_int2)
KMRx=survfit(y~genere,data = datos)
plot(KMRx,lty=c(1,2),col=c("coral","blue"),
xlab="Tiempo de supervivencia en semanas",ylab="Probabilidades de supervivencia",
main="KM Genere")
legend("topright", c("Dona, genere=0","Home, genere=1"),
lty=c(1,2), col=c("coral","blue"))
datos["genere"=="Home",]
datos[daots$genere=="Home",]
datos[datos$genere=="Home",]
datos$genere=="Home"
#home = 1
datos[datos$genere==1,]
#home = 1
datos[datos$genere==1,temps]
#home = 1
datos[datos$genere==1,"temps"]
#home = 1
datos[datos$genere==1,"temps"] == datos[datos$genere==0,"temps"]
datos[datos$genere==0,"temps"]
datos[datos$genere==0,"temps"]
table(datos$genere)
#home = 2
datos[datos$genere==2,"temps"] == datos[datos$genere==1,"temps"]
#home = 2
which(datos[datos$genere==2,"temps"] == datos[datos$genere==1,"temps"])
#home = 2
datos$temps<250
#home = 2
datos[c(datos$temps<250, datos$temps>220),]
KMRx=survfit(y~genere,data = datos)
plot(KMRx,lty=c(1,2),col=c("coral","blue"),
xlab="Tiempo de supervivencia en semanas",ylab="Probabilidades de supervivencia",
main="KM Genere")
legend("topright", c("Dona, genere=0","Home, genere=1"),
lty=c(1,2), col=c("coral","blue"))
+theme(
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "gray"),
panel.grid.minor = element_line(size = 0.25, linetype = 'dotted', colour = "gray")
)
KMRx
KMRx=survfit(y~genere,data = datos)
plot(KMRx,lty=c(1,2),col=c("coral","blue"),
xlab="Tiempo de supervivencia en semanas",ylab="Probabilidades de supervivencia",
main="KM Genere")
legend("topright", c("Dona, genere=0","Home, genere=1"),
lty=c(1,2), col=c("coral","blue"))
grid()
plot(KMRx,lty=c(1,2),col=c("coral","blue"),
xlab="Tiempo de supervivencia en semanas",ylab="Probabilidades de supervivencia",
main="KM Genere",
xaxis)
plot(KMRx,lty=c(1,2),col=c("coral","blue"),
xlab="Tiempo de supervivencia en semanas",ylab="Probabilidades de supervivencia",
main="KM Genere")
legend("topright", c("Dona, genere=0","Home, genere=1"),
lty=c(1,2), col=c("coral","blue"))
axis(1, at = seq(0, 800, by = 50))
# Añadir los ejes y los números de los ejes
axis(2)
grid()
x_ticks = seq(0, 800, by = 50)
plot(KMRx,lty=c(1,2),col=c("coral","blue"),
xlab="Tiempo de supervivencia en semanas",ylab="Probabilidades de supervivencia",
main="KM Genere")
legend("topright", c("Dona, genere=0","Home, genere=1"),
lty=c(1,2), col=c("coral","blue"))
axis(1, at = seq(0, 800, by = 50))
# Añadir los ejes y los números de los ejes
axis(2)
grid()
abline(v = x_ticks, col = "gray", lty = "dotted")
head(data)
head(datos)
split=survSplit(Surv(t, status)~.,data=datos,cut=c(),end="t",
event="status",start="start",id="id")
tmen <- 260
tmaj <- 490
split=survSplit(Surv(t, status)~.,data=datos,cut=c(tmen, tmaj),end="t",
event="status",start="start",id="id")
split=survSplit(Surv(y, status)~.,data=datos,cut=c(tmen, tmaj),end="t",
event="status",start="start",id="id")
tmen <- 260
tmaj <- 490
split=survSplit(Surv(temps, status)~.,data=datos,cut=c(tmen, tmaj),end="temps",
event="status",start="start",id="id")
split
split$temps>=tmen&&split$temps>=tmaj
split$temps>= tmen
split$temps>= tmen == split$temps <= tmaj
(split$temps>= tmen) == (split$temps <= tmaj)
split[(split$temps>= tmen) == (split$temps <= tmaj),]
split
split=survSplit(Surv(temps, status)~.,data=datos,cut=c(tmen, tmaj),end="end",
event="status",start="start",id="id")
split
split=survSplit(Surv(temps, status)~.,data=datos,cut=c(tmen, tmaj),end="temps",
event="status",start="start",id="id")
split[(split$temps>= tmen) == (split$temps < tmaj),]
split[(split$temps>= tmen) == (split$temps < tmaj),"temps"]
split$hv1=split$genere*(split$temps<tmen)
split$genere
split$hv1=split$genere*(split$temps<tmen)
split$genere <- as.numeric(split$genere)
split$hv1=split$genere*(split$temps<tmen)
split$hv2=split$genere*(split[(split$temps>= tmen) == (split$temps < tmaj),"temps"])
(split$temps>= tmen) == (split$temps < tmaj)
split$hv2=split$genere*((split$temps>= tmen) == (split$temps < tmaj))
split$hv3=split$genere*(split$temps>=tmaj)
split
ysplit <- Surv(split$start,split$temps,split$status)
split
modelsplit<-coxph(ysplit ~ tract + pes + hv1+ hv2 + hv3 +cluster(id),data=split); modelh1h2
modelsplit<-coxph(ysplit ~ tract + pes + hv1+ hv2 + hv3 + id + cluster(id),data=split); modelh1h2
split
split$id
ysplit <- Surv(split$start,split$temps,split$status)
modelsplit<-coxph(ysplit ~ tract + pes + hv1+ hv2 + hv3 + cluster(id),data=split); modelh1h2
split$id
ysplit <- Surv(split$start,split$temps,split$status)
modelsplit<-coxph(ysplit ~ tract + pes + hv1+ hv2 + hv3 + cluster(id),data=split); modelh1h2
install.packages(c("arrow", "backports", "COINr", "emmeans", "ggfun", "ggsci", "googleVis", "highr", "Hmisc", "knitr", "lessR", "minqa", "mvtnorm", "quantreg", "readODS", "reticulate", "rio", "rms", "RSQLite", "SparseM", "terra", "textdata", "textshaping", "urca", "vegan"))
install.packages(c("arrow", "backports", "COINr", "emmeans", "ggfun", "ggsci", "googleVis", "highr", "Hmisc", "knitr", "lessR", "minqa", "mvtnorm", "quantreg", "readODS", "reticulate", "rio", "rms", "RSQLite", "SparseM", "terra", "textdata", "textshaping", "urca", "vegan"))
knitr::opts_chunk$set(out.width = "75%", out.height = "75%", fig.align = 'center')
modelsplit
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(ggplot2)
library(tidyr)
library(dplyr)
pg <- read.table("Apartat1_5_PG.txt", header = TRUE)
th <- read.table("Apartat1_5_TH.txt", header = TRUE)
u <- read.table("Apartat1_5_u.txt", header = TRUE)
vud <- read.table("Apartat1_5_vud.txt", header = TRUE)
df2 <- read.table("Apartat1_2.txt", header=T)
## c) gràfic del perfil de potència i energia de dues unitats generadores al llarg del temps
T <- 1:24
df3 <- read.table("Apartat1_3.txt", header = TRUE)
df3$T <- T
df32 <- pivot_longer(df3, cols = c(PG_NRC3, PG_NRC1), names_to = "Generadors", values_to = "Potencia")
df32$Tprev <- df32$T -1
ggplot(data = df32) +
geom_rect(aes(xmin = Tprev, xmax = T, ymin = 0, ymax = Potencia, fill = Generadors, color = Generadors),
alpha = 0.7) +
geom_line(aes(x = T, y = Potencia,color = factor(Generadors)), linewidth=1.1)
ggplot(data = df32) +
geom_rect(aes(xmin = Tprev, xmax = T, ymin = 0, ymax = Potencia, fill = Generadors, color = Generadors),
alpha = 0.7) +
geom_line(aes(x = (T-1), y = Potencia,color = factor(Generadors)), linewidth=1.1)
ggplot(data = df32) +
geom_rect(aes(xmin = Tprev, xmax = T, ymin = 0, ymax = Potencia, fill = Generadors, color = Generadors),
alpha = 0.7) +
geom_line(aes(x = (T-0.5), y = Potencia,color = factor(Generadors)), linewidth=1.1)
pot <- matrix(c(1,2,289.897,
1,5,839.888,
2,3,389.582,
2,4,1133.52,
2,5,1035.12,
3,4,733.77,
4,5,472.025,
4,7,1363.83,
4,9,758.595,
5,6,1312.88,
6,11, 1086.39,
6,12,58.8122,
6,13,167.676,
7,8,121.1,
7,9,1242.73,
9,10, 1160.41,
9,14,130.088,
10,11,37.0086,
12,13,34.0122,
13,14,154.888)
, ncol = 3, byrow = T)
pot[which.max(pot[,3]),]
arc <- read.table("Apartat1_41.txt", header = TRUE)
arc <- read.table("Apartat1_41.txt", header = TRUE)
arc$T <- T
arc$Tprev <- T-1
ggplot(data = arc, aes(x = T, y = potencia))+
geom_line(linewidth=1.1) +
labs(title = "Perfil de potència arc (4,7)",
x = "T",
y = "MGW")
ggplot(data = arc) +
geom_rect(aes(xmin = Tprev, xmax = T, ymin = 0, ymax = potencia)) +
geom_line(aes(x = T, y = potencia))
ggplot(data = arc) +
geom_rect(aes(xmin = Tprev, xmax = T, ymin = 0, ymax = potencia, color = "black")) +
geom_line(aes(x = T, y = potencia))
ggplot(data = arc, aes(x = T, y = potencia))+
geom_line(linewidth=1.1) +
labs(title = "Perfil de potència arc (4,7)",
x = "T",
y = "MGW")
ggplot(data = arc) +
geom_rect(aes(xmin = Tprev, xmax = T, ymin = 0, ymax = potencia, color = "black")) +
geom_line(aes(x = T, y = potencia))+
labs(title = "Perfil de potència arc (4,7)",
x = "T",
y = "MGW")
ggplot(data = arc) +
geom_rect(aes(xmin = Tprev, xmax = T, ymin = 0, ymax = potencia, color = "black"), legend = NULL) +
geom_line(aes(x = T-0.5, y = potencia))+
labs(title = "Perfil de potència arc (4,7)",
x = "T",
y = "MGW")
ggplot(data = arc) +
geom_rect(aes(xmin = Tprev, xmax = T, ymin = 0, ymax = potencia, color = "black")) +
geom_line(aes(x = T-0.5, y = potencia))+
labs(title = "Perfil de potència arc (4,7)",
x = "T",
y = "MGW") +
theme(legend.position = "none")
## e) marge de potència disponible té el sistema a cada període per absorbir eventuals desajustos d oferta i o demanda
marges <- read.table("Apartat_42.txt", header = TRUE)
pg2 <- pg[,-which(sapply(pg, sum)==0)]
pg2$T <- T
marges$generador <- colnames(pg)
marges <- marges[-which(sapply(pg, sum)==0),]
potencia_hores <- pivot_longer(data = pg2, cols = 1:4, names_to = "generador", values_to = "mgw")
prova <- left_join(marges[,3:5], potencia_hores, by="generador")
prova[prova$rdown < 0, 2] <- 0
prova[,"rdown"] <- prova$mgw-prova$rdown
prova[,"rup"] <- prova$mgw+prova$rup
ggplot(data = prova, aes(x = T, y = mgw)) +
geom_ribbon(aes(ymin = rdown, ymax = rup), fill = "grey80", alpha = 0.5) +
geom_line() +
facet_wrap(~generador, ncol = 2) +
labs(x="T",
y="MGW")+
geom_hline(data = marges, aes(yintercept = pmax), color = "red", linetype = "dashed") +
geom_hline(data = marges, aes(yintercept = pmin), color = "blue", linetype = "dashed")
marges
prova[,"rdown"]
prova[,"rdown"]<0
prova[prova[,"rdown"]<0,"rdow"]
prova[prova[,"rdown"]<0,]
prova[prova[,"rdown"]<0,"rdown"]
prova[prova[,"rdown"]<0,"rdown"] <- 0
prova[prova[,"rdown"]<0,"rdown"]
prova[,"rdown"]
prova$mgw>0
prova
marges
rownames(marges) <- marges$generador
prova
prova[1,"generador"]
prova2 <- prova
for(i in 1:nrow(prova)){
if(prova[i,"mgw"]>0 && prova[i, "rdown"]<marges[prova[i,"generador"],"pmin"]){
prova2 <- marges[prova[i,"generador"],"pmin"]
}
}
ggplot(data = prova2, aes(x = T, y = mgw)) +
geom_ribbon(aes(ymin = rdown, ymax = rup), fill = "grey80", alpha = 0.5) +
geom_line() +
facet_wrap(~generador, ncol = 2) +
labs(x="T",
y="MGW")+
geom_hline(data = marges, aes(yintercept = pmax), color = "red", linetype = "dashed") +
geom_hline(data = marges, aes(yintercept = pmin), color = "blue", linetype = "dashed")
prova2 <- prova
for(i in 1:nrow(prova)){
if(prova[i,"mgw"]>0 && prova[i, "rdown"]<marges[prova[i,"generador"],"pmin"]){
prova2[i, "rdown"] <- marges[prova[i,"generador"],"pmin"]
}
}
ggplot(data = prova2, aes(x = T, y = mgw)) +
geom_ribbon(aes(ymin = rdown, ymax = rup), fill = "grey80", alpha = 0.5) +
geom_line() +
facet_wrap(~generador, ncol = 2) +
labs(x="T",
y="MGW")+
geom_hline(data = marges, aes(yintercept = pmax), color = "red", linetype = "dashed") +
geom_hline(data = marges, aes(yintercept = pmin), color = "blue", linetype = "dashed")
prova2 <- prova
for(i in 1:nrow(prova)){
if(prova[i,"mgw"]>0 && prova[i, "rdown"]<marges[prova[i,"generador"],"pmin"]){
prova2[i, "rdown"] <- marges[prova[i,"generador"],"pmin"]
} if(prova[i,"mgw"]>0 && prova[i, "rup"]>marges[prova[i,"generador"],"pmax"]){
prova2 <- prova
for(i in 1:nrow(prova)){
if(prova[i,"mgw"]>0 && prova[i, "rdown"]<marges[prova[i,"generador"],"pmin"]){
prova2[i, "rdown"] <- marges[prova[i,"generador"],"pmin"]
}
else if(prova[i,"mgw"]>0 && prova[i, "rup"]>marges[prova[i,"generador"],"pmax"]){
prova2[i, "rup"] <- marges[prova[i,"generador"],"pmax"]
}
}
ggplot(data = prova2, aes(x = T, y = mgw)) +
geom_ribbon(aes(ymin = rdown, ymax = rup), fill = "grey80", alpha = 0.5) +
geom_line() +
facet_wrap(~generador, ncol = 2) +
labs(x="T",
y="MGW")+
geom_hline(data = marges, aes(yintercept = pmax), color = "red", linetype = "dashed") +
geom_hline(data = marges, aes(yintercept = pmin), color = "blue", linetype = "dashed")
prova[, "rup"]>marges[prova[,"generador"],"pmax"]
prova[prova[, "rup"]>marges[prova[,"generador"],"pmax"],]
prova2[prova2[, "rup"]>marges[prova2[,"generador"],"pmax"],]
ggplot(data = prova2, aes(x = T, y = mgw)) +
geom_ribbon(aes(ymin = rdown, ymax = rup), fill = "pink", alpha = 0.5) +
geom_line() +
facet_wrap(~generador, ncol = 2) +
labs(x="T",
y="MGW")+
geom_hline(data = marges, aes(yintercept = pmax), color = "red", linetype = "dashed") +
geom_hline(data = marges, aes(yintercept = pmin), color = "blue", linetype = "dashed")
for(i in 1:nrow(prova)){
if(prova[i,"mgw"]>0 && prova[i, "rdown"]<marges[prova[i,"generador"],"pmin"]){
prova2[i, "rdown"] <- marges[prova[i,"generador"],"pmin"]
}
else if(prova[i,"mgw"]>0 && prova[i, "rup"]>marges[prova[i,"generador"],"pmax"]){
prova2[i, "rup"] <- marges[prova[i,"generador"],"pmax"]
}
}
prova2[prova2[, "rup"]>marges[prova2[,"generador"],"pmax"],]
marges
for(i in 1:nrow(prova)){
if(prova[i,"mgw"]>0 && prova[i, "rdown"]<marges[prova[i,"generador"],"pmin"]){
prova[i, "rdown"] <- marges[prova[i,"generador"],"pmin"]
}
else if(prova[i,"mgw"]>0 && prova[i, "rup"]>marges[prova[i,"generador"],"pmax"]){
prova[i, "rup"] <- marges[prova[i,"generador"],"pmax"]
}
}
marges
prova2 <- prova
for(i in 1:nrow(prova)){
if(prova[i,"mgw"]>0 && prova[i, "rdown"]<marges[prova[i,"generador"],"pmin"]){
prova2[i, "rdown"] <- marges[prova[i,"generador"],"pmin"]
}
else if(prova[i, "rup"]>marges[prova[i,"generador"],"pmax"]){
prova2[i, "rup"] <- marges[prova[i,"generador"],"pmax"]
}
}
ggplot(data = prova2, aes(x = T, y = mgw)) +
geom_ribbon(aes(ymin = rdown, ymax = rup), fill = "pink", alpha = 0.5) +
geom_line() +
facet_wrap(~generador, ncol = 2) +
labs(x="T",
y="MGW")+
geom_hline(data = marges, aes(yintercept = pmax), color = "red", linetype = "dashed") +
geom_hline(data = marges, aes(yintercept = pmin), color = "blue", linetype = "dashed")
ggplot(data = prova2, aes(x = T, y = mgw)) +
geom_ribbon(aes(ymin = rdown, ymax = rup), fill = "lightblue", alpha = 0.5) +
geom_line() +
facet_wrap(~generador, ncol = 2) +
labs(x="T",
y="MGW")+
geom_hline(data = marges, aes(yintercept = pmax), color = "red", linetype = "dashed") +
geom_hline(data = marges, aes(yintercept = pmin), color = "blue", linetype = "dashed")
ggplot(data = prova2, aes(x = T, y = mgw)) +
geom_ribbon(aes(ymin = rdown, ymax = rup), fill = "tomato", alpha = 0.5) +
geom_line() +
facet_wrap(~generador, ncol = 2) +
labs(x="T",
y="MGW")+
geom_hline(data = marges, aes(yintercept = pmax), color = "red", linetype = "dashed") +
geom_hline(data = marges, aes(yintercept = pmin), color = "blue", linetype = "dashed")
ggplot(data = prova2, aes(x = T, y = mgw)) +
geom_ribbon(aes(ymin = rdown, ymax = rup), fill = "tomato", alpha = 0.5) +
geom_line() +
facet_wrap(~generador, ncol = 2) +
labs(title = "Marge de potència de cada generador", x="T", y="MGW")+
geom_hline(data = marges, aes(yintercept = pmax), color = "red", linetype = "dashed") +
geom_hline(data = marges, aes(yintercept = pmin), color = "blue", linetype = "dashed")+
;
ggplot(data = prova2, aes(x = T, y = mgw)) +
geom_ribbon(aes(ymin = rdown, ymax = rup), fill = "tomato", alpha = 0.5) +
geom_line() +
facet_wrap(~generador, ncol = 2) +
labs(title = "Marge de potència de cada generador", x="T", y="MGW")+
geom_hline(data = marges, aes(yintercept = pmax), color = "red", linetype = "dashed") +
geom_hline(data = marges, aes(yintercept = pmin), color = "blue", linetype = "dashed")
ggplot(data = prova2, aes(x = T, y = mgw)) +
geom_ribbon(aes(ymin = rdown, ymax = rup), fill = "tomato", alpha = 0.5) +
geom_line() +
facet_wrap(~generador, ncol = ) +
labs(title = "Marge de potència de cada generador", x="T", y="MGW")+
geom_hline(data = marges, aes(yintercept = pmax), color = "red", linetype = "dashed") +
geom_hline(data = marges, aes(yintercept = pmin), color = "blue", linetype = "dashed") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = df32) +
geom_rect(aes(xmin = Tprev, xmax = T, ymin = 0, ymax = Potencia, fill = Generadors, color = Generadors),
alpha = 0.7) +
geom_line(aes(x = (T-0.5), y = Potencia,color = factor(Generadors)), linewidth=1.1)
ggplot(data = df32) +
geom_rect(aes(xmin = Tprev, xmax = T, ymin = 0, ymax = Potencia, fill = Generadors, color = Generadors),
alpha = 0.7) +
geom_line(aes(x = (T-0.5), y = Potencia,color = factor(Generadors)), linewidth=1.1) +
labs(title = "Perfil de potència de dos generadors", x = "T", y = "MGW") +
plot.title = element_text(hjust = 0.5)
ggplot(data = df32) +
geom_rect(aes(xmin = Tprev, xmax = T, ymin = 0, ymax = Potencia, fill = Generadors, color = Generadors),
alpha = 0.7) +
geom_line(aes(x = (T-0.5), y = Potencia,color = factor(Generadors)), linewidth=1.1) +
labs(title = "Perfil de potència de dos generadors", x = "T", y = "MGW") +
plot.title = element_text(hjust = 0.5)
ggplot(data = df32) +
geom_rect(aes(xmin = Tprev, xmax = T, ymin = 0, ymax = Potencia, fill = Generadors, color = Generadors),
alpha = 0.7) +
geom_line(aes(x = (T-0.5), y = Potencia,color = factor(Generadors)), linewidth=1.1) +
labs(title = "Perfil de potència de dos generad", x = "T", y = "MGW") +
plot.title = element_text(hjust = 0.5)
ggplot(data = df32) +
geom_rect(aes(xmin = Tprev, xmax = T, ymin = 0, ymax = Potencia, fill = Generadors, color = Generadors),
alpha = 0.7) +
geom_line(aes(x = (T-0.5), y = Potencia,color = factor(Generadors)), linewidth=1.1) +
plot.title = element_text(hjust = 0.5)
